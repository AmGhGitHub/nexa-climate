generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("PG_PRISMA_URL")
  directUrl = env("PG_URL_NON_POOLING")
}

model scope1_emission_sources {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  source String @db.VarChar(500)
}

model scope1_emission_summary {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  report_date     DateTime
  CO2_emis        Float
  CH4_emis        Float
  N2O_emis        Float
  emission_source String?  @db.VarChar(250)
}

model st_combus_hc_based_emis {
  id             String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fuel_type      String @db.VarChar(250)
  fuel_sub_type  String @db.VarChar(250)
  co2_emis_value Float
  co2_emis_unit  String @db.VarChar(250)
  ch4_emis_value Float
  ch4_emis_unit  String @db.VarChar(250)
  n2o_emis_value Float
  n2o_emis_unit  String @db.VarChar(250)
}

model st_combus_heat_content {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fuel_type     String @db.VarChar(250)
  fuel_sub_type String @db.VarChar(250)
  hc_value      Float
  hc_unit       String @db.VarChar(250)
}

model st_combus_quant_based_emis {
  id             String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fuel_type      String @db.VarChar(250)
  fuel_sub_type  String @db.VarChar(250)
  co2_emis_value Float
  co2_emis_unit  String @db.VarChar(250)
  ch4_emis_value Float
  ch4_emis_unit  String @db.VarChar(250)
  n2o_emis_value Float
  n2o_emis_unit  String @db.VarChar(250)
}
